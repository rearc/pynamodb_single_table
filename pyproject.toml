[tool.poetry]
name = "pynamodb_single_table"
version = "0.1.3"
description = "PynamoDB Single Table"
authors = ["David Maxson <scnerd@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/scnerd/pynamodb_single_table"
repository = "https://github.com/scnerd/pynamodb_single_table"
documentation = "https://pynamodb_single_table.readthedocs.io"
classifiers = [
    "Development Status :: 1 - Planning",
]

[tool.poetry.urls]
Changelog = "https://github.com/scnerd/pynamodb_single_table/releases"

[tool.poetry.dependencies]
python = "^3.7"
#click = ">=8.0.1"
pynamodb = "*"
pynamodb-attributes = "*"
pydantic = ">=2"

[tool.poetry.group.test.dependencies]
pytest = ">=6.2.5"
coverage = {extras = ["toml"], version = "^6.1"}
#xdoctest = {extras = ["colors"], version = ">=0.15.10"}

[tool.poetry.group.dev.dependencies]
#Pygments = ">=2.10.0"
#black = "*"
#darglint = ">=1.8.1"
#ruff = "*"
#mypy = "*"
#pep8-naming = ">=0.12.1"
#pre-commit = ">=2.16.0"
#pre-commit-hooks = ">=4.1.0"
#safety = ">=1.10.3"
#typeguard = ">=2.13.3"

[tool.poetry.group.docs.dependencies]
furo = ">=2021.11.12"
sphinx = ">=4.3.2"
sphinx-autobuild = ">=2021.3.14"
#sphinx-click = ">=3.0.2"
myst-parser = {version = ">=0.16.1"}
pydantic = {extras = ["email"], version = "*"}

[tool.poetry.group.constraints.dependencies]
urllib3 = "<1.27"

[tool.poetry.scripts]
pynamodb_single_table = "pynamodb_single_table.__main__:main"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["pynamodb_single_table", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true

[tool.ruff]
src = ['src', 'tests']
line-length = 120
target-version = 'py37'

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "RUF100"]
#select = [
#  'A',
#  'ARG',
#  'B',
#  'B9',
#  'BLE',
#  'C',
#  'C4',
#  'D',
#  'DTZ',
#  'E',
#  'F',
#  'I',
##  'N',
#  'PIE',
#  'PT',
#  'PTH',
#  'Q',
#  'RET',
#  'RUF',
#  'S',
#  'SIM',
#  'SLF',
#  'T10',
#  'TCH',
#  'UP',
#  'W',
#]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ['F401']
"tests/*" = [
    'S',
    'D212',
    'D415',
    'D205',
    'D104',
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = 'google'

[tool.ruff.lint.isort]
force-single-line = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
